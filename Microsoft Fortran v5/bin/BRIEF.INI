[M MEP]
; TOOLS.INI file for BRIEF(tm) configuration

NotBrief:=arg "No equivalent in the Microsoft Editor" message
ToolsIni:=arg "$INIT:tools.ini" setfile

;
; GLOBAL CONFIGURATION
;
autosave:no
undocount:30
autostart:=toggle_re
vscroll:1
errprompt:no
nounixre:
rmargin:70

;
;   Backup File Toggle.	Toggle through M.E.'s backup options and let
;   the user know that something extra is going on.
;
backup:bak
baknone:=arg "backup:none" assign arg "File backups turned off!" message  \
	arg "bakbak:Ctrl+W" assign
bakbak:=arg "backup:bak" assign arg "Single backups enabled" message  \
	arg "bakundel:Ctrl+W" assign
bakundel:= arg "backup:undel" assign arg "Multiple backups enabled" message  \
	arg "baknone:Ctrl+W" assign
bakundel:Ctrl+W

;
;   Beginning of Line
;
beginning_of_line:=meta begline
beginning_of_line:Home

;
;   Buffer List
;
Information:Alt+B

;
;   Case Sensitivity Toggle
;
case:yes
caseon:=arg "case:" assign arg "Enabled Case Sensitivity" message  \
	arg "caseoff:ctrl+f5" assign
caseoff:=arg "nocase:" assign arg "Disabled Case Sensitivity" message  \
	arg "caseon:ctrl+f5" assign
caseoff:ctrl+f5

;
;   Center Line Horizontally
;   Center Line in Window.
;   There are no centering functions in M.E.
;
center:=NotBrief
NotBrief:Ctrl+C

;
;   Change Output File
;
output_file:=arg arg "Enter new output file name: " prompt -> setfile
output_file:Alt+O

;
;   Change Window
;
Window:F2

;
;   Color.  To set colors in M.E., assign a new value to one of the
;   following switches.	The value is a two digit hex number where the
;   first digit is the background color and the second is the foreground.
;   The number to color mapping is the same as in Brief.  The color change
;   will not take effect until you restart the editor.	To see an immediate
;   change, mark (select) the color assignment lines and press Alt+=.
;
color:=ToolsIni begfile arg "color:=ToolsIni" psearch up up up up up up up
fgColor:07	; Text color
selColor:70	; Selection color
hgColor:02	; Search text color
infColor:06	; Message color
staColor:03	; Status Line
errColor:04	; Error Color
wdColor:07	; Window Borders

;
;   Compile Buffer.  Compile command is set with the 'extmake' switch
;   (see documentation).
;
compile_it:=Arg Compile
compile_it:Alt+F10

;
;   Create Key Assignment
;
assign_to_key:=arg <assign> setfile

;
;   Create Window.  Window handling is very different in M.E.
;
;   To create a new window, move the cursor to the line or column where
;   the new border is to be placed and do:
;
;		Alt+A F3	- to create a horizontal border
;		Alt+A Alt+A F3	- to create a vertical border
;
;   To change the current window, press F3.
;
;   To delete an existing window, go to that window and press F4.
;
;   Windows cannot be resized.
;
create_edge:=ToolsIni begfile arg "create_edge:=" psearch up up up up  \
	up up up up up up up up up up arg "window:F3" assign
create_edge:F3

;
;   Cut to Scrap.  Doesn't take current line if nothing is selected.
;
delete:num-

;
;   Delete
;
clear:=meta delete
clear:del

;
;   Delete Current Buffer
;
delete_curr_buffer:=arg refresh
delete_curr_buffer:Ctrl+_

;
;   Delete Line.  In M.E., the line goes to the clipboard.
;
ldelete:Alt+D

;
;   Delete Macro File
;
NotBrief:Shift+F9

;
;   Delete Next Word
;
delete_next_word:=Arg Pword Clear

;
;   Delete Previous Word
;
delete_previous_word:=Pword Arg Mword Clear
delete_previous_word:Ctrl+Bksp

;
;   Delete to End of Line
;
delete_to_eol:=arg ldelete
delete_to_eol:Alt+K

;
;   Delete Window
;
delete_edge:=meta window
delete_edge:F4

;
;   Display File Name
;
display_file_name:=arg curfile message
display_file_name:Alt+F

;
;   Display version ID
;
version:=arg "Microsoft Editor Version 1.02" message
version:Alt+V

;
;   EditFile
;
EditFile:=arg "File: " prompt -> setfile
EditFile:Alt+E

;
;   End of Window
;
end_of_window:=meta down
end_of_window:Ctrl+End

;
;   Execute Command.  In M.E. you can enter any series of functions or
;   macros, including string literals "in quotes".
;
execute_macro:=arg "Command: " prompt -> execute
execute_macro:F10

;
;   Exit
;
exit:Alt+X

;
;   Go to Line
;
GoTo:=arg "Go to line: " prompt -> mark
GoTo:alt+g

;
;   Go to routine.
;
routines:=arg "You can use marks to go to routines.  See documentation"  \
	message
routines:Ctrl+G

;
;   Help.  First make sure that help is loaded.  Then attach context-
;   sensitive help to Alt+H.
;
load:$PATH:mhelp
mhctx:Alt+H

;
;   Incremental Search
;
i_search:=NotBrief

;
;   Insert Mode Toggle.  Toggle between Insert and Overstrike modes and issue
;   a message telling the user what has been done.
;
enterinsmode:yes
insert_mode:=Insertmode +>showins arg "Overstrike Mode" message =>  \
                       :>showins arg "Insert Mode" message
insert_mode:Alt+I

;
;   Left Side of Window
;
left_side:=meta left
left_side:Shift+Home

;
;   Line to Bottom of Window
;
NotBrief:Ctrl+B

;
;   Line to Top of Window
;
NotBrief:Ctrl+T

;
;   Load Macro File
;
NotBrief:F9

;
;   Lower Case Block
;
load:$PATH:ulcase
tolower:=ulcase

;
;   Mark.  Known in M.E. as selecting text.  In M.E., selection is
;   done in one of two modes: stream and box/line, which correspond
;   to normal and column/line selection in Brief.  To select lines,
;   start marking in column mode, but move straight down. To change
;   between modes in M.E., a toggle function <boxstream> is provided.
;
; Arg:Alt+A	     ; M.E. selection (default assignment)
; BoxStream:Ctrl+B    ; M.E. mode toggle (default assignment)
;
ToStream:=BoxStream -> BoxStream   ; Change to stream mode
ToBox:=BoxStream +> BoxStream	   ; Change to box/line mode

mark2:=ToBox Arg
mark2:Alt+C
mark2:Alt+L

mark1:=ToStream Arg
mark1:Alt+M

;
;   Next Buffer
;
setfile:Alt+N

;
;   Next Character
;
next_char:=NotBrief

;
;   Next Error
;
NextMsg:Ctrl+N

;
;   Non-Inclusive Mark
;
open_line:=down linsert meta begline
open_line:Ctrl+Enter

;
;   Paste From Scrap
;
paste:ins

;
;   Pause Recording Toggle
;
NotBrief:Shift+F7

;
;   Pause On Error
;
pause_on_error:=togErr arg "togErr:=" errname assign

togErr:=errOn

errOn:=arg "errprompt:" assign arg "errname:=\"errOff\"" assign
errOff:=arg "noerrprompt:" assign arg "errname:=\"errOn\"" assign

;
;   PlayBack
;
recordvalue:=arg "No recording has been made" message.
recordvalue:F8

;
;   Pop-up Errors.  In M.E., this switches you to the compile file.  You
;   can go to any message with Alt+A Alt+A NextMsg.
;
next_error1:=arg "<compile>" setfile
next_error1:Ctrl+P

;
;   Previous Buffer.  There are no "next" and "previous" buffers in M.E.,
;   so this is the same as "Next Buffer".
;
setfile:Alt+-

;
;   Previous Character
;
prev+char:=NotBrief

;
;   Print Block
;
print:Alt+P

;
;   Quote
;
quote:Alt+Q

;
;   Read File into Buffer
;
read_file:=arg arg "File to read: " prompt -> paste

;
;   Reformat Paragraph
;
load:$PATH:justify
reform:=justify

;
;   Regular Expression Toggle.	In M.E., regular expression recognition
;   is controlled by modifying the search and search/replace functions
;   (Arg Arg forces regular expression search).
;
toggle_re:=togRE arg "togRE:=" srchname assign
toggle_re:Ctrl+F6
togRE:=REon

REoff:=arg "psrch:=arg \"Search for: \" prompt -> psearch"  assign  \
	arg "msrch:=arg \"Search for: \" prompt -> msearch" assign  \
	arg "qrepl:=qreplace" assign  \
	arg "srchname:=\"REon\"" assign	\
	arg "Disabled Regular Expressions" message
REon:=arg "psrch:=arg arg \"Search for: \" prompt -> psearch" assign  \
	arg "msrch:=arg arg \"Search for: \" prompt -> msearch" assign  \
	arg "qrepl:=arg arg qreplace" assign  \
	arg "srchname:=\"REoff\"" assign  \
	arg "Enabled Regular Expressions" message

;
;   Remember.  Use Arg Arg Record to append to existing macro.
;
record:F7

;
;   Repeat
;
repeat:Ctrl+R

;
;   Right Side of Window
;
right_side:=meta right
right_side:Shift+End

;
;   Scroll Buffer Down in Window
;
mlines:Ctrl+D

;
;   Scroll Buffer Up in Window
;
plines:Ctrl+U

;
;   Search Again
;
search_again:=psearch
search_again:Shift+F5

;
;   Search Backward
;
search_back:=msrch arg "search_again:=msearch" assign
search_back:Alt+F5

;
;   Search Forward
;
search_fwd:=psrch arg "search_again:=psearch" assign
search_fwd:F5
search_fwd:Alt+S

;
;   Suspend Editor
;
shell:Alt+Z

;
;   Tab.  Please read the documentation for a full description of tabs.
;
graphic:tab
realtabs:yes
entab:0
tabstops:8

;
;   Tab Stops
;
tabs:=NotBrief

;
;   Top of Buffer
;
begfile:Ctrl+PgUp

;
;   Top of Window
;
top_of_window:=meta up
top_of_window:Ctrl+Home

;
;   Translate Again
;
translate_again:=qrepl
translate_again:Shift+F6

;
;   Translate Backward
;
translate_back:=arg "You can only translate forwards" message
translate_back:Alt+F6

;
;   Translate Forward
;
translate:=qrepl
translate:F6
translate:Alt+T

;
;   Undo
;
undo:Alt+U
undo:num*

;
;   Use Tab Characters
;
use_tab_char:=arg "entab:1" assign

;
;   Window Border Toggle
;
NotBrief:Alt+F1

;
;
;   Write
;
write_it:=arg arg setfile
write_it:Alt+W

;
; BRIEF is a trademark of UnderWare, INC.
