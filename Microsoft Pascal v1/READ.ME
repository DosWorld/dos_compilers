This describes the contents of the accompanying diskettes.  A detailed
description of how to use the compiler and other utilities is given in
the appropriate User manuals.  However, since these are still in
preparation and are not available, a brief outline is given below.

Files on this distribution
--------------------------

	Pascal Compiler

	READ.ME		This Memo
	PAS1.EXE	Pascal Compiler Pass 1
	PAS2.EXE	Compiler Pass 2 (Common to Fortran and Pascal)

	Pascal Run-Time

	LINK.EXE	Microsoft Linker for .OBJ files
	PASCAL.LIB	The Pascal Library

To use this distribution of Microsoft Pascal you need an MS-DOS
system with at least least 128K of contiguous main memory, and at least one
standard MS-DOS compatible floppy disk drive.

These files are distributed on two disks because they won't all fit on one
single-density disk.  Disk 1 has the compiler first pass, PAS1.EXE; the Pascal
library, PASCAL.LIB; and other assorted files.  Disk 2 has the compiler second
pass, PAS2.EXE; and the linker, LINK.EXE.  If you have a double-density disk
system, you will find it much more convenient to use the compiler if you copy
all these files onto one double-density disk.

Compiling
---------

To use Microsoft Pascal please follow these instructions:

Place the disk containing pass one of the compiler (PAS1.EXE) in a drive.

Place a disk containing at least 160K free space in the default drive.
The intermediate files generated by the first pass of the compiler will be
put on this disk.  If there is sufficient space on the disk with the first
pass of the compiler, it can be used to store the intermediate files.

The source file can be on any drive.

Initiate the first pass of the compiler by typing:

	d:PAS1 sourcefile,objectfile,sourcelist,objectlist

You should note the following about the command line:

1.  Filemanes can appear on the command line, of (if not enough are
given) the user is prompted for filenames.

2.  Commas between filenames, and a trailing semicolon, are optional.
Lower case is always converted to upper case.

3.  Filesnames occure in the following order:

	source, object, source listing, object listing;

4.  The source extension defaults to .PAS.
The object extension defaults to source.OBJ, listing file extensions
to .LST for the source listing, and .COD for the object listing.
Default extensions are given in the prompt.

5.  There is no default source filename.  Object filename defaults to
the same as the source, and listing filenames default to NUL except
that when a comma preceeds a missing listing filename it defaults to
the source filename as well:

	"d:PAS1 SS,,,;"   read SS.PAS, write SS.OBJ, SS.LST, SS.COD
	"d:PAS1 SS;"      read SS.PAS, write SS.OBJ, listings to NUL.

6.  Blanks are permitted, except within filenames.

7.  If the trailing ";" is missing from the command line and more
files could follow, the prompt sequence starts, giving default to use.

8.  A new drive (as in "B:") or extension (as in ".REL") can be given
in any file position to override the default;  does not affect the
filename itself.

Examples:

A:PAS1 pascalfn;
B:PAS1
Source file [.PAS]:  pascalfn
Object file [.OBJ]:  A:
Source list [.LST]:  /c/d
Object list [.COD]:  ;

Complete the compilation by inserting the disk with the compiler
second pass (PAS2.EXE) and typing:

	d:PAS2

PAS2 is the same for Microsoft Fortran and Pascal because both
languages have a common intermediate form.  As PAS2 executes,
it will read the intermediate files created by PAS1 from the
default drive and create a new file on the default drive:  PASIBF.TMP
as well as the object and listing files.  PASIBF.TMP is a temporary
file used by PAS2 for scratch.  All of the PASIBF files are
automatically deleted when PAS2 completes normally.  The object file
is the relocatable binary object file for input to the Microsoft Linker.

Linking
-------

Link the object program by typing:

	LINK objectfile;

The Linker links the object file(s) using PASCAL.LIB as the library.
The command line syntax is similar to that of the Pascal front end,
except that more than one .OBJ file can be specified as input using
"+" as a separator.  There are other features as well.  Read the
Linker Manual to find out about them.

Running your Program
--------------------

Run the .EXE file by typing the name of the file without the 
extension, e.g.  to run A.EXE just type:

	A
